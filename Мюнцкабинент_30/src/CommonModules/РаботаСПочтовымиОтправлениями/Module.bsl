Функция ОтслеживаниеРПО (ПочтовыйИдентификатор) Экспорт
	
	Треки = Новый Массив ();
	
	Запрос = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
	Запрос.Open("POST", "http://tracking.russianpost.ru/rtm34?wsdl", 0);
	Запрос.setRequestHeader("Content-Type", "application/soap+xml; charset=utf-8");
	 
	XML =
	 "<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"" xmlns:oper=""http://russianpost.org/operationhistory"" xmlns:data=""http://russianpost.org/operationhistory/data"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
	 |   <soap:Header/>
	 |   <soap:Body>
	 |      <oper:getOperationHistory>
	 |         <data:OperationHistoryRequest>
	 |            <data:Barcode>" + ПочтовыйИдентификатор + "</data:Barcode>
	 |            <data:MessageType>0</data:MessageType>
	 |            <data:Language>RUS</data:Language>
	 |         </data:OperationHistoryRequest>
	 |         <data:AuthorizationHeader soapenv:mustUnderstand=""1"">
	 |            <data:login>uxZYwpdrrJXCKL</data:login>
	 |            <data:password>DDLOKQ6CN7Nl</data:password>
	 |         </data:AuthorizationHeader>
	 |      </oper:getOperationHistory>
	 |   </soap:Body>
	 |</soap:Envelope>";
	 
	Попытка
	 	Запрос.Send(XML);
	Исключение
		ЗаписьЖурналаРегистрации("Отслеживание почтовых отправлений", УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки());
		Возврат Треки
	КонецПопытки;	
	
	Запрос.WaitForResponse();
	Ответ = Запрос.ResponseText;
	 
	ЧтениеXML = Новый ЧтениеXML;
	//ЧтениеXML.ОткрытьФайл("E:\DB\response_rpo.xml");
	ЧтениеXML.УстановитьСтроку(Ответ);
	 
	 
	ПостроительDOM	= Новый ПостроительDOM;
	Попытка
		ДокументDOM		= ПостроительDOM.Прочитать(ЧтениеXML);
	Исключение
		ЗаписьЖурналаРегистрации("Отслеживание почтовых отправлений", УровеньЖурналаРегистрации.Ошибка,,ДокументDOM,"Ошибка разбора xml!");
		Возврат Треки
	КонецПопытки;	
	
	ЧтениеXML.Закрыть();
	
	ИнформацияОбОтправлениях = ДокументDOM.ПолучитьЭлементыПоИмени("OperationHistoryData");
	
	//
	ТЗОперации = РаботаСПочтовымиОтправлениями.ПолучитьПочтовыеОперации ();
	ТЗСтатусы  = РаботаСПочтовымиОтправлениями.ПолучитьПочтовыеСтатусы ();
	//
	Для Каждого Отправление ИЗ ИнформацияОбОтправлениях Цикл
		Для Каждого Элемент ИЗ Отправление.ДочерниеУзлы Цикл
			Если Элемент.ИмяУзла = "ns3:historyRecord" Тогда
				
				ТочкаТрека  = Новый Структура;
				
				Для Каждого Запись ИЗ Элемент.ДочерниеУзлы Цикл
					
					Если Запись.ИмяУзла = "ns3:AddressParameters" Тогда
						
						АдресПолучателя 		= Запись.ПолучитьЭлементыПоИмени("DestinationAddress");
						Если АдресПолучателя.Количество () > 0 Тогда
							ТочкаТрека.Вставить("ИндексПолучателя", АдресПолучателя [0].ПолучитьЭлементыПоИмени("Index")[0].ТекстовоеСодержимое);
							ТочкаТрека.Вставить("АдресПолучателя", АдресПолучателя [0].ПолучитьЭлементыПоИмени("Description")[0].ТекстовоеСодержимое);
						КонецЕсли;	
						//
						АдресОперации			= Запись.ПолучитьЭлементыПоИмени("OperationAddress");
						Если АдресОперации.Количество () > 0 Тогда
							ТочкаТрека.Вставить("Индекс", АдресОперации [0].ПолучитьЭлементыПоИмени("Index")[0].ТекстовоеСодержимое);
							ТочкаТрека.Вставить("Описание", АдресОперации [0].ПолучитьЭлементыПоИмени("Description")[0].ТекстовоеСодержимое);
						КонецЕсли;	
						
						СтранаНазначения		= Запись.ПолучитьЭлементыПоИмени("MailDirect");
						Если СтранаНазначения.Количество () > 0 Тогда
							ТочкаТрека.Вставить("СтранаПолучателя", СтранаНазначения [0].ПолучитьЭлементыПоИмени("NameRU")[0].ТекстовоеСодержимое);	
						КонецЕсли;	
						
					ИначеЕсли Запись.ИмяУзла = "ns3:FinanceParameters" Тогда
						
					ИначеЕсли Запись.ИмяУзла = "ns3:ItemParameters" Тогда	
						
						Параметр = Запись.ПолучитьЭлементыПоИмени("Barcode");
						Если Параметр.Количество () > 0 Тогда
							ТочкаТрека.Вставить("ПочтовыйИдентификатор", Параметр[0].ТекстовоеСодержимое);
						КонецЕсли;	
						
						Параметр = Запись.ПолучитьЭлементыПоИмени("ComplexItemName");
						Если Параметр.Количество () > 0 Тогда
							ТочкаТрека.Вставить("Категория", Параметр[0].ТекстовоеСодержимое);
						КонецЕсли;	
						
						Параметр = Запись.ПолучитьЭлементыПоИмени("Mass");
						Если Параметр.Количество () > 0 Тогда
							ТочкаТрека.Вставить("Вес", Число(Параметр[0].ТекстовоеСодержимое));
						КонецЕсли;	
						
					ИначеЕсли Запись.ИмяУзла = "ns3:OperationParameters" Тогда
						
						ТипОперации						= Запись.ПолучитьЭлементыПоИмени("OperType") [0].ПолучитьЭлементыПоИмени("Name")[0].ТекстовоеСодержимое;
						НайденаяОперация 				= ТЗОперации.Найти (ВРег(ТипОперации), "Наименование");
						Если НайденаяОперация <> Неопределено Тогда
							ТочкаТрека.Вставить("Операция", НайденаяОперация.Ссылка);
						Иначе
							Попытка
								ТочкаТрека.Вставить("Операция", Справочники.ПочтовыеОперации [ТипОперации]);
							Исключение
								ЗаписьЖурналаРегистрации("Отслеживание почтовых отправлений", УровеньЖурналаРегистрации.Информация,,ДокументDOM,"Не опознан тип операции: " + ТипОперации);	
							КонецПопытки;	
						КонецЕсли;	
						
						АтрибутыОперации = Запись.ПолучитьЭлементыПоИмени("OperAttr");
						Если АтрибутыОперации.Количество () > 0 Тогда
							АтрибутName = АтрибутыОперации [0].ПолучитьЭлементыПоИмени("Name");
							Если АтрибутName.Количество () > 0 Тогда
								СтатусОперации			= АтрибутName[0].ТекстовоеСодержимое;
								НайденыйСтатус			= ТЗСтатусы.Найти (ВРег(СтатусОперации), "Наименование");
								Если НайденыйСтатус <> Неопределено Тогда
									ТочкаТрека.Вставить("Статус", НайденыйСтатус.Ссылка);
								Иначе
									ЗаписьЖурналаРегистрации("Отслеживание почтовых отправлений", УровеньЖурналаРегистрации.Информация,,ДокументDOM,"Не статус операции: " + СтатусОперации);	
								КонецЕсли;	
							КонецЕсли;	
						КонецЕсли;	
						
						ДатаСтрокой						= Запись.ПолучитьЭлементыПоИмени("OperDate") [0].ТекстовоеСодержимое;
						ДатаСтрокой						= Лев(ДатаСтрокой, Найти(ДатаСтрокой, "."));
						ДатаСтрокой 					= СтрЗаменить(ДатаСтрокой, ".", "");
						ДатаСтрокой 					= СтрЗаменить(ДатаСтрокой, "T", "");
						ДатаСтрокой 					= СтрЗаменить(ДатаСтрокой, "-", "");
						ДатаСтрокой 					= СтрЗаменить(ДатаСтрокой, ":", "");
						ТочкаТрека.Вставить("Дата", Дата(ДатаСтрокой));
						
					ИначеЕсли Запись.ИмяУзла = "ns3:UserParameters" Тогда	
						
						ТочкаТрека.Вставить("Отправитель", Запись.ПолучитьЭлементыПоИмени("Sndr") [0].ТекстовоеСодержимое);
						ТочкаТрека.Вставить("Получатель", Запись.ПолучитьЭлементыПоИмени("Rcpn") [0].ТекстовоеСодержимое);
						
					Иначе
						ЗаписьЖурналаРегистрации("Отслеживание почтовых отправлений", УровеньЖурналаРегистрации.Информация,,ДокументDOM,"Новое имя узла: " + Запись.ИмяУзла);	
					КонецЕсли;	
					
				КонецЦикла;	
				
				Треки.Добавить(ТочкаТрека);								
				
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;		
	//
	Если Треки.Количество() > 0 Тогда
		Отправление = Новый Структура;
		Если Треки [0].Свойство("ПочтовыйИдентификатор") Тогда
			Отправление.Вставить("ПочтовыйИдентификатор", 	Треки [0].ПочтовыйИдентификатор);
		КонецЕсли;	
		Если Треки [0].Свойство("СтранаПолучателя") Тогда
			Отправление.Вставить("СтранаПолучателя", 		Треки [0].СтранаПолучателя);
		КонецЕсли;
		Если Треки [0].Свойство("ИндексПолучателя") Тогда
			Отправление.Вставить("ИндексПолучателя", 		Треки [0].ИндексПолучателя);
		КонецЕсли;	
		Если Треки [0].Свойство("АдресПолучателя") Тогда
			Отправление.Вставить("АдресПолучателя", 		Треки [0].АдресПолучателя);
		КонецЕсли;	
		Если Треки [0].Свойство("Вес") Тогда
			Отправление.Вставить("Вес", 					Треки [0].Вес);
		КонецЕсли;
		Если Треки [0].Свойство("Категория") Тогда
			Отправление.Вставить("Категория", 				Треки [0].Категория);
		КонецЕсли;
		Если Треки [0].Свойство("Наименование") Тогда
			Отправление.Вставить("Наименование",			Треки [0].Категория);
		КонецЕсли;
		Если Треки [0].Свойство("Отправитель") Тогда
			Отправление.Вставить("Отправитель", 			Треки [0].Отправитель);
		КонецЕсли;
		Если Треки [0].Свойство("Получатель") Тогда
			Отправление.Вставить("Получатель", 				Треки [0].Получатель);
		КонецЕсли;
		//
		РегистрыСведений.ПочтовыеИдентификаторы.ЗаписатьПараметрыПочтовогоОтправления(Отправление);	
		//
	КонецЕсли;	
	//
	Возврат Треки	

КонецФункции

Функция ПолучитьИнформациюПоТрекуНаСервере (ПочтовыйИдентификатор) Экспорт
	
	Треки = Новый Массив ();

	Соединение = Новый HTTPСоединение ("rupost.info",,,,,30);
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
	Ответ = Соединение.Получить("/xml?code=" + СокрЛП(ПочтовыйИдентификатор), ИмяФайла);
	
	//ИмяФайла = "C:\Users\Yury\AppData\Local\Temp\v8_33CE_5.xml";
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ИмяФайла);
	
	ПостроительDOM	= Новый ПостроительDOM;
	Попытка
		ДокументDOM		= ПостроительDOM.Прочитать(Чтение);
	Исключение
		ЗаписьЖурналаРегистрации("Отслеживание почтовых отправлений", УровеньЖурналаРегистрации.Ошибка,,ДокументDOM,"Ошибка разбора xml!");
		Возврат Треки	
	КонецПопытки;	
	//
	Чтение.Закрыть();
	//
	ФС = Новый Файл (ИмяФайла);
	Если ФС.Существует() Тогда
		Попытка
			УдалитьФайлы(ФС.Путь, ФС.Имя)	
		Исключение
		КонецПопытки;	
	КонецЕсли;	
	//
	Отправление = Новый Структура;
	//
	ИнформацияОбОтправлении = ДокументDOM.ПолучитьЭлементыПоИмени("info");
	Если ИнформацияОбОтправлении.Количество() = 0 Тогда // нет информации о треке
		
		Возврат Треки 
		
	КонецЕсли;	
	Для Каждого Элемент ИЗ ИнформацияОбОтправлении[0].ДочерниеУзлы Цикл
		Если Элемент.ИмяУзла = "code" Тогда
			Отправление.Вставить("ПочтовыйИдентификатор", Элемент.ДочерниеУзлы [0].ЗначениеУзла);
		ИначеЕсли Элемент.ИмяУзла = "name" Тогда
			Отправление.Вставить("Наименование", Элемент.ДочерниеУзлы [0].ЗначениеУзла);
		ИначеЕсли Элемент.ИмяУзла = "destination" Тогда 	
			Отправление.Вставить("СтранаПолучателя", 	Элемент.ДочерниеУзлы[1].ДочерниеУзлы[0].ЗначениеУзла);
			Отправление.Вставить("ИндексПолучателя", 	Элемент.ДочерниеУзлы[2].ТекстовоеСодержимое);
			Отправление.Вставить("АдресПолучателя", 	Элемент.ДочерниеУзлы[3].ТекстовоеСодержимое);
		ИначеЕсли Элемент.ИмяУзла = "weight" Тогда 
			Отправление.Вставить("Вес", Элемент.ДочерниеУзлы [0].ЗначениеУзла);
		ИначеЕсли Элемент.ИмяУзла = "category" Тогда 	
			Отправление.Вставить("Категория", Элемент.ДочерниеУзлы [0].ДочерниеУзлы[1].ДочерниеУзлы[0].ЗначениеУзла);
		КонецЕсли;	
	КонецЦикла;	
	//
	РегистрыСведений.ПочтовыеИдентификаторы.ЗаписатьПараметрыПочтовогоОтправления(Отправление);
	//
	ТЗОперации = ПолучитьПочтовыеОперации ();
	ТЗСтатусы  = ПолучитьПочтовыеСтатусы ();
	//
	ЭтапыОбработки = ДокументDOM.ПолучитьЭлементыПоИмени("operations");
	Для Каждого Этап ИЗ ЭтапыОбработки[0].ДочерниеУзлы Цикл
		Если Этап.ИмяУзла = "date" Тогда
			ТочкаТрека = Новый Структура;
		ИначеЕсли Этап.ИмяУзла = "timestamp" Тогда
			ТаймШтамп = Число(Этап.ДочерниеУзлы[0].ЗначениеУзла);
			ТочкаТрека.Вставить("Дата", МестноеВремя(Дата(1970,1,1,1,0,0) + ТаймШтамп));
		ИначеЕсли Этап.ИмяУзла = "address" Тогда
			ТочкаТрека.Вставить("Индекс", Этап.ДочерниеУзлы[0].ДочерниеУзлы[0].ЗначениеУзла);
			ТочкаТрека.Вставить("Описание", Этап.ДочерниеУзлы[1].ДочерниеУзлы[0].ЗначениеУзла);
		ИначеЕсли Этап.ИмяУзла = "operation" Тогда
			Операция = ВРег(Этап.ДочерниеУзлы[1].ДочерниеУзлы[0].ЗначениеУзла);
			НайденаяОперация = ТЗОперации.Найти (Операция, "Наименование");
			Если НайденаяОперация <> Неопределено Тогда
				ТочкаТрека.Вставить("Операция", НайденаяОперация.Ссылка);
			КонецЕсли;	
		ИначеЕсли Этап.ИмяУзла = "attr" Тогда
			Статус = ВРег(Этап.ДочерниеУзлы[1].ДочерниеУзлы[0].ЗначениеУзла);
			НайденыйСтатус = ТЗСтатусы.Найти (Статус, "Наименование");
			Если НайденыйСтатус <> Неопределено Тогда
				ТочкаТрека.Вставить("Статус", НайденыйСтатус.Ссылка);
			КонецЕсли;	
			Треки.Добавить(ТочкаТрека);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Треки
	//
КонецФункции


Функция ПолучитьПочтовыеОперации () Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПочтовыеОперации.Ссылка,
		|	ПочтовыеОперации.Наименование
		|ИЗ
		|	Справочник.ПочтовыеОперации КАК ПочтовыеОперации
		|ГДЕ
		|	НЕ ПочтовыеОперации.ПометкаУдаления";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка ИЗ Результат Цикл
		Строка.Наименование = ВРег(Строка.Наименование);
	КонецЦикла;	
	
	Результат.Индексы.Добавить("Наименование");
	
	Возврат Результат
	
КонецФункции	

Функция ПолучитьПочтовыеСтатусы () Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПочтовыеСтатусы.Ссылка,
		|	ПочтовыеСтатусы.Наименование
		|ИЗ
		|	Справочник.ПочтовыеСтатусы КАК ПочтовыеСтатусы
		|ГДЕ
		|	НЕ ПочтовыеСтатусы.ПометкаУдаления";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка ИЗ Результат Цикл
		Строка.Наименование = ВРег(Строка.Наименование);
	КонецЦикла;	
	
	Результат.Индексы.Добавить("Наименование");
	
	Возврат Результат
	
КонецФункции	

Процедура ОповеститьОбИзмененииСтатуса (ДокСсылка) Экспорт
	
	НЗ = РегистрыСведений.ПочтовыеИдентификаторы.СоздатьНаборЗаписей();
	НЗ.Отбор.Документ.Установить(ДокСсылка);
	НЗ.Прочитать();
	
	Если НЗ [0].ТекущийСтатус = НЗ [0].ПредыдущийСтатус Тогда
		Возврат
	КонецЕсли;	
	
	ПочтовыйИдентификатор 	= НЗ [0].ПочтовыйИдентификатор;
	ТекущийСтатус			= НЗ [0].ТекущийСтатус;
	
	Если РаботаСПочтовымиСообщениями.ПроверитьСистемнаяУчетнаяЗаписьДоступна() Тогда
		СистемнаяУчетнаяЗапись = РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись()
	Иначе
		ЗаписьЖурналаРегистрации("ОповещениеОбИзмененииСтатуса", УровеньЖурналаРегистрации.Ошибка,,,"Не удалось получить системную учетную запись ЭП.");
		Возврат
	КонецЕсли;	
	
	АдресЭП = ПолучитьАдресЭППользователя (ДокСсылка.Коллекционер);
	Если АдресЭП = Неопределено Тогда
		ЗаписьЖурналаРегистрации("ОповещениеОбИзмененииСтатуса", УровеньЖурналаРегистрации.Ошибка,,,"У пользователя: " + ДокСсылка.Коллекционер + " не указан адрес ЭП.");
		Возврат
	КонецЕсли;	
	
	Если ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.РеализацияОбъектовКоллекций") Тогда
		АдресЭППокупателя = ПолучитьАдресЭПКонтрагента (ДокСсылка.Контрагент)
	КонецЕсли;	
	
	ПараметрыПисьма = Новый Структура;
	Кому = Новый Массив;
	Коллекционер = Новый Структура ("Адрес, Представление", АдресЭП, ДокСсылка.Коллекционер.Наименование);
	Кому.Добавить(Коллекционер);
	Если АдресЭППокупателя <> Неопределено Тогда
		Покупатель = Новый Структура ("Адрес, Представление", АдресЭППокупателя, ДокСсылка.Контрагент.Наименование);
		Кому.Добавить(Покупатель);
	КонецЕсли;	
	ПараметрыПисьма.Вставить("Кому", Кому);
	ПараметрыПисьма.Вставить("Тема", "Изменение статуса почтового отправления" + ?(ПустаяСтрока (ПочтовыйИдентификатор), "", " ("+ ПочтовыйИдентификатор + ")"));
	ПараметрыПисьма.Вставить("ТипТекста", "HTML");
	ТелоПисьма = СформироватьТелоПисьма (ДокСсылка, ТекущийСтатус);
	ПараметрыПисьма.Вставить("Тело", ТелоПисьма);
	
	
	ИдентификаторСообщения = РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(СистемнаяУчетнаяЗапись, ПараметрыПисьма);
	//
	ЗаписьЖурналаРегистрации("ОповещениеОбИзмененииСтатуса", УровеньЖурналаРегистрации.Предупреждение,,,"Идентификатор отправленного сообщения: " + ИдентификаторСообщения);	
	
КонецПроцедуры	

Функция СформироватьТелоПисьма (ДокСсылка, Статус, ПочтовыйИдентификатор = "")
	
	Текст = "<html>" + Символы.ПС + "<body>" + Символы.ПС;
	Текст = Текст + "<h3>" + "Здравствуйте!" + "</h3>" + Символы.ПС;
	Текст = Текст + "<p>" + "Изменился статус почтового отправления по документу: " + ДокСсылка + ?(ПустаяСтрока(ДокСсылка.Комментарий), "", " ("+ ДокСсылка.Комментарий + ")") + "</p>" ;
	
	ИформацияОбОтправлении = РегистрыСведений.ПочтовыеИдентификаторы.ПолучитьИнформациюОПочтовомОтправлении(ДокСсылка);
	Если ИформацияОбОтправлении <> Неопределено Тогда
		Текст = Текст + "<br />";
		Текст = Текст + "<h3>Информация об отправлениии</h3>";
		Текст = Текст + "<table>";
		Если ИформацияОбОтправлении.Свойство ("ПочтовыйИдентификатор")  Тогда
				Текст = Текст + "<tr>";
				Текст = Текст + "<td>Почтовый идентификатор:</td>";
				Текст = Текст + "<td>"+ ИформацияОбОтправлении.ПочтовыйИдентификатор + "</td>";
				Текст = Текст + "</tr>";
		КонецЕсли;	
		Если ИформацияОбОтправлении.Свойство ("Наименование")  Тогда
				Текст = Текст + "<tr>";
				Текст = Текст + "<td>Наименование:</td>";
				Текст = Текст + "<td>"+ ИформацияОбОтправлении.Наименование + "</td>";
				Текст = Текст + "</tr>";
		КонецЕсли;	
		Если ИформацияОбОтправлении.Свойство ("Вес")  Тогда
				Текст = Текст + "<tr>";
				Текст = Текст + "<td>Вес:</td>";
				Текст = Текст + "<td>"+ ИформацияОбОтправлении.Вес + "</td>";
				Текст = Текст + "</tr>";
		КонецЕсли;	
			
		Текст = Текст + "</table>";
		Текст = Текст + "<br />";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПочтовыеТреки.Период,
		|	ПочтовыеТреки.Индекс,
		|	ПочтовыеТреки.ПочтовоеОтделение,
		|	ПочтовыеТреки.Операция,
		|	ПочтовыеТреки.Статус
		|ИЗ
		|	РегистрСведений.ПочтовыеТреки КАК ПочтовыеТреки
		|ГДЕ
		|	ПочтовыеТреки.Документ = &Документ";
	
	Запрос.УстановитьПараметр("Документ", ДокСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Текст = Текст + "<table>" + Символы.ПС;
	
	Пока Выборка.Следующий() Цикл
		Текст = Текст + "<tr>";
		Текст = Текст + "<td>" + Формат(Выборка.Период, "ДЛФ=DT") + "</td>";
		Текст = Текст + "<td>" + Выборка.Индекс + "</td>";
		Текст = Текст + "<td>" + Выборка.ПочтовоеОтделение + "</td>";
		Текст = Текст + "<td>" + Выборка.Операция + "</td>";
		Текст = Текст + "<td>" + Выборка.Статус + "</td>";
		Текст = Текст + "</tr>" + Символы.ПС;
	КонецЦикла;
	
	Текст = Текст + "</table>";
	
	Текст = Текст + Символы.ПС + Символы.ПС + "<p>" + "--" + "<br />" + Символы.ПС;
	Текст = Текст + "С уважением," + "<br />" + Символы.ПС;
	Текст = Текст + "Система уведомлений программы ""Мюнцкабинет""" + "</p>" ;
	
	Текст = Текст + "</body>"  + Символы.ПС + "</html>" + Символы.ПС;
	
	Возврат Текст
	
КонецФункции	

Функция ПолучитьАдресЭППользователя (Пользователь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПользователиКонтактнаяИнформация.АдресЭП КАК АдресЭП
		|ИЗ
		|	Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
		|ГДЕ
		|	ПользователиКонтактнаяИнформация.Ссылка = &Ссылка
		|	И ПользователиКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
		|	И ПользователиКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailПользователя)";
	
	Запрос.УстановитьПараметр("Ссылка", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.АдресЭП
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
КонецФункции	

Функция ПолучитьАдресЭПКонтрагента (Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	_ДемоКонтрагентыКонтактнаяИнформация.АдресЭП
		|ИЗ
		|	Справочник._ДемоКонтрагенты.КонтактнаяИнформация КАК _ДемоКонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	_ДемоКонтрагентыКонтактнаяИнформация.Ссылка = &Контрагент
		|	И _ДемоКонтрагентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
		|	И _ДемоКонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации._ДемоEmailКонтрагента)";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.АдресЭП
	Иначе
		Возврат Неопределено
	КонецЕсли
	
КонецФункции	
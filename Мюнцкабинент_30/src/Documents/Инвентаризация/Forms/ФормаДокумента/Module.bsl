// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура КоллекцияПриИзменении(Элемент)
	
	КоллекцияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияПриИзмененииНаСервере()
	
	Если Объект.Коллекция.КоличествоЯчеек <> 0 Тогда
		Элементы.СписокНомерВКоллекции.МаксимальноеЗначение = Объект.Коллекция.КоличествоЯчеек;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Коллекция", Объект.Коллекция);
	Запрос.УстановитьПараметр("НаДату", Объект.Дата);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Коллекция,
		|	ВложенныйЗапрос.Монета,
		|	ВложенныйЗапрос.НомерВКоллекции КАК НомерВКоллекции,
		|	ВложенныйЗапрос.УчетноеКоличество,
		|	ВложенныйЗапрос.УчетноеКоличество КАК ФактическоеКоличество,
		|	ВложенныйЗапрос.Цена,
		|	ВложенныйЗапрос.Сумма,
		|	ИСТИНА КАК ДобавленаЗапросом
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДвиженияМонетОстатки.Коллекция КАК Коллекция,
		|		ДвиженияМонетОстатки.Объект КАК Монета,
		|		НомерВКоллекции.Номер КАК НомерВКоллекции,
		|		ДвиженияМонетОстатки.КоличествоОстаток КАК УчетноеКоличество,
		|		ДвиженияМонетОстатки.СтоимостьОстаток КАК Цена,
		|		ДвиженияМонетОстатки.СтоимостьОстаток * ДвиженияМонетОстатки.КоличествоОстаток КАК Сумма
		|	ИЗ
		|		РегистрНакопления.ДвиженияМонет.Остатки(&НаДату, Коллекция = &Коллекция) КАК ДвиженияМонетОстатки
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомерВКоллекции КАК НомерВКоллекции
		|			ПО ДвиженияМонетОстатки.Объект = НомерВКоллекции.Монета
		|	ГДЕ
		|		ДвиженияМонетОстатки.КоличествоОстаток <> 0) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерВКоллекции,
		|	ВложенныйЗапрос.Монета.ВидМонеты.ГодВыпуска,
		|	ВложенныйЗапрос.Монета.ВидМонеты.Номинал";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Объект.Список.Загрузить(РезультатЗапроса.Выгрузить());
	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	// убрал в условное оформление
	//Если (Элемент.ТекущиеДанные.ДобавленаЗапросом И Элемент.ТекущиеДанные.УчетноеКоличество = Элемент.ТекущиеДанные.ФактическоеКоличество) И (Элемент.ТекущийЭлемент <> Элементы.СписокФактическоеКоличество) Тогда
	//	Отказ = Истина
	//КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	Отказ = Элемент.ТекущиеДанные.ДобавленаЗапросом
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Копирование
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФактическоеКоличествоПриИзменении(Элемент)
	
	Если Элементы.Список.ТекущиеДанные.ДобавленаЗапросом И Элементы.Список.ТекущиеДанные.УчетноеКоличество < Элементы.Список.ТекущиеДанные.ФактическоеКоличество Тогда
		ИмяПоля = "Список [" + Строка (Элементы.Список.ТекущаяСтрока) + "]" + ".ФактическоеКоличество";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В этой строке фактическое количество не может превышать учетное количество!'"), , ИмяПоля, "Объект");
		Элементы.Список.ТекущиеДанные.ФактическоеКоличество = Элементы.Список.ТекущиеДанные.УчетноеКоличество;
	КонецЕсли;	
	
	Элементы.Список.ТекущиеДанные.Сумма = Элементы.Список.ТекущиеДанные.ФактическоеКоличество * Элементы.Список.ТекущиеДанные.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуМонеты(Команда)
	
	ПараметрыОткрытия 		= Новый Структура ("Ключ", Элементы.Список.ТекущиеДанные.Монета);
	Форма 						= ПолучитьФорму("Справочник.Монеты.ФормаОбъекта", ПараметрыОткрытия);
	Форма.ТолькоПросмотр 		= Истина;
	Форма.Открыть ();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры


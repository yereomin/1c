// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура МонетыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Отказ = Истина
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МонетыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Для Каждого Строка ИЗ ВыбранноеЗначение Цикл
		НоваяМонета = Объект.Монеты.Добавить();
		НоваяМонета.Монета 				= Строка.Монета;
		НоваяМонета.Количество 			= Строка.КоличествоОстаток;
		НоваяМонета.Стоимость			= Строка.СтоимостьОстаток;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоКоллекции(Команда)
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("Период", Объект.Дата);
	ПараметрыПодбора.Вставить("Коллекция", Объект.КоллекцияТекущая);
	
	ФормаВыбора = ПолучитьФорму("Обработка.ПодборМонетПоКоллекции.Форма", ПараметрыПодбора, Элементы.Монеты);
	ФормаВыбора.Открыть ();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИнформациюПоМонете (МонетаСсылка)
	Возврат РегистрыНакопления.ДвиженияМонет.ПолучитьИнформациюПоОбъекту(МонетаСсылка, Объект.Дата)	
КонецФункции	

&НаКлиенте
Процедура МонетыМонетаПриИзменении(Элемент)
	ИнформацияПоМонете 								= ПолучитьИнформациюПоМонете (Элементы.Монеты.ТекущиеДанные.Монета);
	Если ИнформацияПоМонете.Свойство ("Количество") Тогда
		Элементы.Монеты.ТекущиеДанные.Количество 	= ИнформацияПоМонете.Количество;
	КонецЕсли;
	Если ИнформацияПоМонете.Свойство ("Стоимость") Тогда
		Элементы.Монеты.ТекущиеДанные.Стоимость		= ИнформацияПоМонете.Стоимость;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура МонетыМонетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("Период", Объект.Дата);
	ПараметрыПодбора.Вставить("Коллекция", Объект.КоллекцияТекущая);
	ПараметрыПодбора.Вставить("МножественныйВыбор", Ложь);
	
	ФормаВыбора = ПолучитьФорму("Обработка.ПодборМонетПоКоллекции.Форма", ПараметрыПодбора, Элемент);
	ФормаВыбора.Открыть ();
	
КонецПроцедуры

&НаКлиенте
Процедура МонетыМонетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Элементы.Монеты.ТекущиеДанные.Монета = ВыбранноеЗначение [0].Монета;
		МонетыМонетаПриИзменении(Элемент);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Функция ПолучитьИнформациюОМонете (МонетаСсылка, Период)
	Возврат РегистрыНакопления.ДвиженияМонет.ПолучитьИнформациюПоОбъекту(МонетаСсылка, Период)
КонецФункции

&НаСервере
Функция РасчитатьКоэффициентПоДопРасходам (Коллекционер, Период)
	
	ДопРасходы 			= РегистрыНакопления.ДополнительныеРасходы.ПолучитьСуммуДопРасходов (Коллекционер, Период); 
	СтоимостьКоллекции 	= РегистрыНакопления.ДвиженияМонет.ПолучитьСтоимостьКоллекции(Коллекционер, Период);
	
	Возврат ?(СтоимостьКоллекции = 0, 0, ДопРасходы/СтоимостьКоллекции)
	
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда // новый
		Объект.Коллекционер			= ПараметрыСеанса.ТекущийПользователь;
		Объект.ТипЦены				= Справочники.ТипыЦен.ЦенаПродажи;
		Объект.УчитыватьДопРасходы  = Истина;
		
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
  	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура УчитыватьДопРасходыПриИзменении(Элемент)
	УправлениеВидимостьюКолонкиДопРасходы ();
	ПересчитатьДопРасходы ();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюКолонкиДопРасходы ()
	
	Элементы.СписокДопРасходы.Видимость = Объект.УчитыватьДопРасходы;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПересчитатьДопРасходы ()
	Если Объект.УчитыватьДопРасходы Тогда
		К = РасчитатьКоэффициентПоДопРасходам (Объект.Коллекционер, Объект.Дата);
		Для Каждого Строка ИЗ Объект.Список Цикл
			Информация = ПолучитьИнформациюОМонете(Строка.Монета, Объект.Дата);	
			Строка.ДопРасходы = Строка.Себестоимость * К;
		КонецЦикла;	
	Иначе
		Для Каждого Строка ИЗ Объект.Список Цикл
			Строка.ДопРасходы = 0;	
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеВидимостьюКолонкиДопРасходы ();
	
	ОсновнаяУчетнаяВалюта = ПолучитьОсновнуюУчетнуюВалюту ();
	Если ОсновнаяУчетнаяВалюта.Пустая () Тогда
		ТекстПояснения = НСтр("ru = 'Не установлена основная учетная валюта.'"); 
		ПоказатьОповещениеПользователя(НСтр("ru = 'Установите учетные валюты!'"),
			"e1cib/app/ОбщаяФорма.ФормаВалютныхКонстант", ТекстПояснения, БиблиотекаКартинок.Предупреждение32);
	КонецЕсли;
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОсновнуюУчетнуюВалюту ()

	Возврат Константы.ОсновнаяУчетнаяВалюта.Получить()

КонецФункции // ПолучитьОсновнуюУчетнуюВалюту ()()

&НаКлиенте
Процедура СписокЦенаПриИзменении(Элемент)
	
	Элементы.Список.ТекущиеДанные.Сумма 	= Элементы.Список.ТекущиеДанные.Количество * Элементы.Список.ТекущиеДанные.Цена;
	Элементы.Список.ТекущиеДанные.Профит 	= ?(Элементы.Список.ТекущиеДанные.ПолнаяСебестоимость = 0, 0, (Элементы.Список.ТекущиеДанные.Цена - Элементы.Список.ТекущиеДанные.ПолнаяСебестоимость) / Элементы.Список.ТекущиеДанные.ПолнаяСебестоимость * 100); 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКоличествоПриИзменении(Элемент)
	
	Если Элементы.Список.ТекущиеДанные.Количество > Элементы.Список.ТекущиеДанные.КоличествоОстаток Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Количество не может превышать количество остатка!'"), ,"СписокКоличество");
		Элементы.Список.ТекущиеДанные.Количество = Элементы.Список.ТекущиеДанные.КоличествоОстаток; 
		//
		Возврат
		
	КонецЕсли;	
	
	Элементы.Список.ТекущиеДанные.Сумма = Элементы.Список.ТекущиеДанные.Количество * Элементы.Список.ТекущиеДанные.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМонетаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено (Элементы.Список.ТекущиеДанные.Монета) Тогда
		
		Информация = ПолучитьИнформациюОМонете(Элементы.Список.ТекущиеДанные.Монета, Объект.Дата);
		
		Если Информация.Свойство ("Количество") Тогда
			Элементы.Список.ТекущиеДанные.КоличествоОстаток = Информация.Количество;	
			Элементы.Список.ТекущиеДанные.Количество = Информация.Количество;	
		КонецЕсли;	
		
		Если Информация.Свойство ("Стоимость") Тогда
			Элементы.Список.ТекущиеДанные.Себестоимость = Информация.Стоимость	
		КонецЕсли;	
		
		Если Информация.Свойство ("Коллекция") Тогда
			Элементы.Список.ТекущиеДанные.Коллекция = Информация.Коллекция	
		КонецЕсли;
		
		// теперь общие издержки
		Если Объект.УчитыватьДопРасходы Тогда
			К = РасчитатьКоэффициентПоДопРасходам (Объект.Коллекционер, Объект.Дата);
			Элементы.Список.ТекущиеДанные.ДопРасходы = Элементы.Список.ТекущиеДанные.Себестоимость * К; 		
		Иначе
			Элементы.Список.ТекущиеДанные.ДопРасходы = 0;	
		КонецЕсли;	
		//
		// полная себестоимость и профит
		Элементы.Список.ТекущиеДанные.ПолнаяСебестоимость = Элементы.Список.ТекущиеДанные.Себестоимость + Элементы.Список.ТекущиеДанные.ДопРасходы; 
		Элементы.Список.ТекущиеДанные.Профит 	= ?(Элементы.Список.ТекущиеДанные.ПолнаяСебестоимость = 0, 0, (Элементы.Список.ТекущиеДанные.Цена - Элементы.Список.ТекущиеДанные.ПолнаяСебестоимость) / Элементы.Список.ТекущиеДанные.ПолнаяСебестоимость * 100); 
		//
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Для Каждого Строка ИЗ Объект.Список Цикл
		Строка.ПолнаяСебестоимость = Строка.Себестоимость + Строка.ДопРасходы;
		Строка.Профит = ?(Строка.Цена = 0, 0, (Строка.Цена - Строка.ПолнаяСебестоимость) / Строка.Цена * 100); 
	КонецЦикла;	
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПрофитПриИзменении(Элемент)
	Элементы.Список.ТекущиеДанные.Цена 		= Окр(Элементы.Список.ТекущиеДанные.ПолнаяСебестоимость + Элементы.Список.ТекущиеДанные.ПолнаяСебестоимость * Элементы.Список.ТекущиеДанные.Профит / 100, 2, РежимОкругления.Окр15как20);
	Элементы.Список.ТекущиеДанные.Сумма 	= Элементы.Список.ТекущиеДанные.Количество * Элементы.Список.ТекущиеДанные.Цена;
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	//
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПрофит.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Список.Профит");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = 10;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборПоОстаткам(Команда)
	
	ПараметрыПодбора = Новый Структура ("Период", Объект.Дата);
	ФормаПодбора = ПолучитьФорму("Справочник.Монеты.Форма.ФормаВыбораПоОстаткам", ПараметрыПодбора,	Элементы.Список, УникальныйИдентификатор);
	ФормаПодбора.Элементы.Список.МножественныйВыбор = Истина;
	ФормаПодбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Монета Из ВыбранноеЗначение Цикл
			НоваяСтрока 		= Объект.Список.Добавить();
			НоваяСтрока.Монета 	= Монета;
			//
			Информация = ПолучитьИнформациюОМонете(Монета, Объект.Дата);
		
			Если Информация.Свойство ("Количество") Тогда
				НоваяСтрока.КоличествоОстаток 	= Информация.Количество;	
				НоваяСтрока.Количество 			= Информация.Количество;	
			КонецЕсли;	
		
			Если Информация.Свойство ("Стоимость") Тогда
				НоваяСтрока.Себестоимость 		= Информация.Стоимость	
			КонецЕсли;	
		
			Если Информация.Свойство ("Коллекция") Тогда
				НоваяСтрока.Коллекция 			= Информация.Коллекция	
			КонецЕсли;
		
			// теперь общие издержки
			Если Объект.УчитыватьДопРасходы Тогда
				К = РасчитатьКоэффициентПоДопРасходам (Объект.Коллекционер, Объект.Дата);
				НоваяСтрока.ДопРасходы 			= НоваяСтрока.Себестоимость * К; 		
			Иначе
				НоваяСтрока.ДопРасходы 			= 0;	
			КонецЕсли;	
			//
			НоваяСтрока.Цена					= Окр((НоваяСтрока.Себестоимость + НоваяСтрока.ДопРасходы) * 1.1, 0, РежимОкругления.Окр15как20);
			НоваяСтрока.Сумма 					= НоваяСтрока.Количество * НоваяСтрока.Цена;
			//
			// полная себестоимость и профит
			НоваяСтрока.ПолнаяСебестоимость 	= НоваяСтрока.Себестоимость + НоваяСтрока.ДопРасходы; 
			НоваяСтрока.Профит 					= ?(НоваяСтрока.ПолнаяСебестоимость = 0, 0, (НоваяСтрока.Цена - НоваяСтрока.ПолнаяСебестоимость) / НоваяСтрока.ПолнаяСебестоимость * 100); 
			//
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры




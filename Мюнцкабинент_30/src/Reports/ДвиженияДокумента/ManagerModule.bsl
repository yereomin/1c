#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	МодульВариантыОтчетов = ОбщегоНазначения.ОбщийМодуль("ВариантыОтчетов");
	МодульВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Ложь);
	
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
	НастройкиОтчета.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы(), "Важный");
	
	НастройкиВарианта_Горизонталь = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Основной");
	НастройкиВарианта_Горизонталь.Описание = НСтр("ru = 'Движения документа (Горизонтально).'");
	НастройкиВарианта_Горизонталь.НастройкиДляПоиска.КлючевыеСлова = НСтр("ru = 'Движения документа'");
	
	НастройкиВарианта_Вертикаль = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Дополнительный");
	НастройкиВарианта_Вертикаль.Описание = НСтр("ru = 'Движения документа (Вертикально).'");
	НастройкиВарианта_Вертикаль.НастройкиДляПоиска.КлючевыеСлова = НСтр("ru = 'Движения документа'");
	
КонецПроцедуры

// Для вызова из процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.
// 
// Параметры:
//   КомандыОтчетов              - ТаблицаЗначений - таблица команд для вывода в подменю.
//                                 (См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов).
//   Параметры                   - Структура - структура, содержащая параметры подключения команды.
//   ДокументыСОтчетомОДвижениях - Массив, Неопределено - массив документов, в которых будет выводится
//                                 команда открытия отчета. Неопределено в том случае когда отчет выводится
//                                 для всех документов со свойством "Проведение" установленным в "Разрешить"
//                                 и непустой коллекцией движений.
//
// Возвращаемое значение:
//   СтрокаТаблицыЗначений, Неопределено - добавленная команда или Неопределено, если нет прав на просмотр отчета.
//
Функция ДобавитьКомандуОтчетОДвиженияхДокумента(КомандыОтчетов, Параметры, ДокументыСОтчетомОДвижениях = Неопределено) Экспорт
	
	Если Не ПравоДоступа("Просмотр", Метаданные.Отчеты.ДвиженияДокумента) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОписаниеТипаПараметраКоманды = ОписаниеТипаПараметраКоманды(КомандыОтчетов, Параметры, ДокументыСОтчетомОДвижениях);
	Если ОписаниеТипаПараметраКоманды = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Команда                    = КомандыОтчетов.Добавить();
	Команда.Представление      = НСтр("ru = 'Движения документа'");
	Команда.МножественныйВыбор = Ложь;
	Команда.ИмяПараметраФормы  = "";
	Команда.Важность           = "СмТакже";
	Команда.ТипПараметра       = ОписаниеТипаПараметраКоманды;
	Команда.Менеджер           = "Отчет.ДвиженияДокумента";
	
	Возврат Команда;
	
КонецФункции

// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
Процедура ПриНастройкеВариантовОтчетов(Настройки) Экспорт
	
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ДвиженияДокумента);
	ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДвиженияДокумента).Включен = Ложь;
	
КонецПроцедуры

// См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.
Процедура ПередДобавлениемКомандОтчетов(КомандыОтчетов, НастройкиФормы, СтандартнаяОбработка) Экспорт
	
	ДобавитьКомандуОтчетОДвиженияхДокумента(КомандыОтчетов, НастройкиФормы);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеТипаПараметраКоманды(КомандыОтчетов, Параметры, ДокументыСОтчетомОДвижениях)
	
	Если Не Параметры.Свойство("Источники") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтрокиИсточников = Параметры.Источники.Строки;
	
	Если ДокументыСОтчетомОДвижениях <> Неопределено Тогда
		ОтключитьОтчетОтДокументов(КомандыОтчетов);
	КонецЕсли;
	
	Типы            = Новый Массив;
	ИсключаемыеТипы = Новый Массив;
	
	Для Каждого СтрокаИсточника Из СтрокиИсточников Цикл
		
		ТипСсылкиДанных = СтрокаИсточника.ТипСсылкиДанных;
		
		Если ТипЗнч(ТипСсылкиДанных) = Тип("Тип") Тогда
			Типы.Добавить(ТипСсылкиДанных);
		ИначеЕсли ТипЗнч(ТипСсылкиДанных) = Тип("ОписаниеТипов") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Типы, ТипСсылкиДанных.Типы());
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СвернутьМассив(Типы);
	
	Для Каждого ТекущийТип Из Типы Цикл
		Если ЭтоПодключаемыйТип(ТекущийТип, ДокументыСОтчетомОДвижениях) Тогда
			Продолжить;
		КонецЕсли;
		ИсключаемыеТипы.Добавить(ТекущийТип);
	КонецЦикла;
	
	Для Каждого ИсключаемыйТип Из ИсключаемыеТипы Цикл
		Типы.Удалить(Типы.Найти(ИсключаемыйТип));
	КонецЦикла;
	
	Если Типы.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат Новый ОписаниеТипов(Типы);
	КонецЕсли;
	
КонецФункции

Процедура ОтключитьОтчетОтДокументов(КомандыОтчетов)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Менеджер", "Отчет.ДвиженияДокумента");
	НайденныеСтроки = КомандыОтчетов.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		КомандыОтчетов.Удалить(НайденнаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

Функция ЭтоПодключаемыйТип(ПроверяемыйТип, ДокументыСОтчетомОДвижениях)
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ПроверяемыйТип);
	
	Если ОбъектМетаданных = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ДокументыСОтчетомОДвижениях <> Неопределено И ДокументыСОтчетомОДвижениях.Найти(ОбъектМетаданных) = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ЭтоДокумент(ОбъектМетаданных) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ОбъектМетаданных.Проведение <> Метаданные.СвойстваОбъектов.Проведение.Разрешить
		Или ОбъектМетаданных.Движения.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецЕсли
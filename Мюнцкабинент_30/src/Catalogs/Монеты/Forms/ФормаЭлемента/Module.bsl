
&НаКлиенте
Процедура СоздатьФайл(Команда)
		
	РаботаСФайламиКлиент.ОткрытьФормуВыбораФайлов(Объект.Ссылка, ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	ОткрытьФайлДляПросмотра ()
	
КонецПроцедуры

&НаКлиенте
Процедура АдресВоВременномХранилищеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФайлДляПросмотра ()

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДляПросмотра ()
	
	ФайлСсылка = Элементы.СписокКартинок.ТекущаяСтрока;
	//
	Если Не ФайловыеКомандыДоступны(ФайлСсылка) Тогда 
		Возврат;
	КонецЕсли;
	//
	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(ФайлСсылка, 
		Неопределено, УникальныйИдентификатор, Неопределено, ПредыдущийАдресФайла);
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
	
КонецПроцедуры	

&НаКлиенте
Функция ФайловыеКомандыДоступны(ФайлСсылка)
	// Доступны файловые команды - есть хотя бы одна строка в списке и выделена не группировка
	
	Если ФайлСсылка = Неопределено Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(ФайлСсылка) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда // новый
		АвтоматическоеФормированиеНаименования 	= Истина;
	КонецЕсли;	
	
	Элементы.АвтоматическоеФормированиеНаименования.Видимость = НЕ ТолькоПросмотр; 
	
	УправлениеДоступностьюНаименования();
	УправлениеВидимостьюОбластиИзображений();
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоматическоеФормированиеНаименованияПриИзменении(Элемент)
	УправлениеДоступностьюНаименования()	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностьюНаименования()

	Элементы.Наименование.РедактированиеТекста = НЕ АвтоматическоеФормированиеНаименования;

КонецПроцедуры

Процедура СформироватьНаименование()
	
	Если НЕ АвтоматическоеФормированиеНаименования Тогда
		Возврат
	КонецЕсли;	
	
	Наименование 	= "";
	
	Если ЗначениеЗаполнено(Объект.ВидМонеты) Тогда
		Наименование = Наименование + Объект.ВидМонеты.Наименование;
	КонецЕсли;	
	//
	// формирование описания
	//
	Если ЗначениеЗаполнено(Объект.Сохранность) Тогда
		Наименование = ?(ПустаяСтрока(Наименование), Объект.Сохранность.Код, Наименование + "/" + Объект.Сохранность.Код);
	КонецЕсли;	
	//
	Объект.Наименование = Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранностьПриИзменении(Элемент)
	СформироватьНаименование();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		СсылкаНаОбъект = Справочники.Монеты.ПолучитьСсылку();
		//
	КонецЕсли;	
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокКартинок, "Владелец", Объект.Ссылка);
	//
	ПолучитьЦенуПриобретенияНаСервере ();
	ПолучитьИнформациюОКоллекцииНаСервере ();
	//
		
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ВидМонетыПриИзменении(Элемент)
	СформироватьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	РаботаСФайламиКлиент.ПоказатьПодтверждениеЗакрытияФормыСФайлами(ЭтаФорма, Отказ, ЗавершениеРаботы, Объект.Ссылка);
   	Если Отказ Тогда
    	Возврат;
    КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СсылкаНаОбъект = Объект.Ссылка;
	
   // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
			
	Если Параметры.Ключ.Пустая() Тогда
		ТекущийОбъект.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" Тогда
		Элементы.СписокКартинок.Обновить();
	ИначеЕсли ИмяСобытия = "ЗаписанНомерВКоллекции" Тогда
		ПолучитьИнформациюОКоллекцииНаСервере ()
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКартинокПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = неопределено тогда
		Возврат;
	КонецЕсли;	
	
	Если ОтображатьКартинки Тогда	
    	ПодключитьОбработчикОжидания("ОбработчикОжиданияСписокПриАктивизацииСтроки", 0.1, Истина);	 	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияСписокПриАктивизацииСтроки()
	
	АдресВоВременномХранилище 	= "";
	
	Если НЕ Элементы.СписокКартинок.ТекущиеДанные = Неопределено Тогда
		
		ПолучитьАдресИзображеняНаСервере (Элементы.СписокКартинок.ТекущиеДанные.Ссылка);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьАдресИзображеняНаСервере (ИзображениеСсылка)
		
	ДанныеФайла 				= РаботаСФайлами.ДанныеФайла(ИзображениеСсылка, УникальныйИдентификатор);
	АдресВоВременномХранилище 	= ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;	

КонецПроцедуры


&НаКлиенте
Процедура ПереключательОтображатьКартинки(Команда)
	
	ОтображатьКартинки = НЕ ОтображатьКартинки;
	УправлениеВидимостьюОбластиИзображений()
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюОбластиИзображений()
	
	Элементы.ГруппаПревью.Видимость 					= ОтображатьКартинки;
	Элементы.СписокКартинокОтображатьКартинки.Пометка 	= НЕ ОтображатьКартинки;
	Элементы.СписокКартинокОтображатьКартинки.Заголовок = ?(ОтображатьКартинки, "Не отображать картинки", "Отображать картинки");
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЦенуПриобретенияНаСервере ()
	
	СписокТиповЦен = Новый СписокЗначений;
	СписокТиповЦен.Добавить(Справочники.ТипыЦен.ЦенаПриобретения);
	СписокТиповЦен.Добавить(Справочники.ТипыЦен.Оценочная);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтоимостьОбъектовКоллекцинирования.Объект КАК Объект,
		|	СтоимостьОбъектовКоллекцинирования.ТипЦены КАК ТипЦены,
		|	СтоимостьОбъектовКоллекцинирования.Стоимость КАК Стоимость,
		|	СтоимостьОбъектовКоллекцинирования.РегистраторЦен КАК РегистраторЦен
		|ИЗ
		|	РегистрСведений.СтоимостьОбъектовКоллекцинирования КАК СтоимостьОбъектовКоллекцинирования
		|ГДЕ
		|	СтоимостьОбъектовКоллекцинирования.ТипЦены В (&СписокТиповЦен)
		|	И (СтоимостьОбъектовКоллекцинирования.РегистраторЦен ССЫЛКА Документ.ПоступлениеВКоллекцию ИЛИ СтоимостьОбъектовКоллекцинирования.РегистраторЦен ССЫЛКА Документ.Инвентаризация)
		|	И СтоимостьОбъектовКоллекцинирования.Объект = &МонетаСсылка";
	
	Запрос.УстановитьПараметр("МонетаСсылка", 	СсылкаНаОбъект);
	Запрос.УстановитьПараметр("СписокТиповЦен", СписокТиповЦен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЦенаПриобретения 	= ВыборкаДетальныеЗаписи.Стоимость;	
		РегистраторЦены		= ВыборкаДетальныеЗаписи.РегистраторЦен;
		Элементы.ЦенаПриобретения.Подсказка = РегистраторЦены
	КонецЕсли;


КонецПроцедуры	

&НаСервере
Процедура ПолучитьИнформациюОКоллекцииНаСервере ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДвиженияМонетОстатки.Коллекция КАК Коллекция
		|ИЗ
		|	РегистрНакопления.ДвиженияМонет.Остатки КАК ДвиженияМонетОстатки
		|ГДЕ
		|	ДвиженияМонетОстатки.Объект = &МонетаСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НомерВКоллекции.Номер КАК Номер
		|ИЗ
		|	РегистрСведений.НомерВКоллекции КАК НомерВКоллекции
		|ГДЕ
		|	НомерВКоллекции.Монета = &МонетаСсылка";
	
	Запрос.УстановитьПараметр("МонетаСсылка", СсылкаНаОбъект);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Выборка = Результаты [0].Выбрать();
	
	Если Выборка.Следующий() Тогда
		Коллекция = Выборка.Коллекция;	
	КонецЕсли;

	Выборка = Результаты [1].Выбрать();
	
	Если Выборка.Следующий() Тогда
		НомерВКоллекции = Выборка.Номер;	
	КонецЕсли;
	
	Элементы.ГруппаКоллекция.Видимость = НЕ (Результаты [0].Пустой() И Результаты [1].Пустой())

КонецПроцедуры	

&НаКлиенте
Процедура НомерВКоллекцииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	Если НЕ НомерВКоллекции = 0 Тогда
		ПараметрыОткрытия.Вставить("Ключ", ПолучитьКлючЗаписиНаСервере ());
		ПараметрыОткрытия.Вставить("Номер", НомерВКоллекции);
	Иначе
		ПараметрыОткрытия.Вставить("Монета", СсылкаНаОбъект);
	КонецЕсли;
	ПараметрыОткрытия.Вставить("НеОтображатьМонету");
	
	ОткрытьФорму("РегистрСведений.НомерВКоллекции.ФормаЗаписи", ПараметрыОткрытия, ЭтаФорма, УникальныйИдентификатор)
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКлючЗаписиНаСервере ()
	
	Отбор = Новый Структура;
	Отбор.Вставить("Монета", СсылкаНаОбъект);
	Возврат РегистрыСведений.НомерВКоллекции.СоздатьКлючЗаписи(Отбор);		
	
КонецФункции

&НаСервере
Функция ПолучитьИмяФормыРегистратораЦены ()

	Возврат "Документ." + РегистраторЦены.Метаданные().Имя + ".ФормаОбъекта"

КонецФункции // ПолучитьИмяФормыРегистратораЦены ()()


&НаКлиенте
Процедура ЦенаПриобретенияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	//
	Если РегистраторЦены = Неопределено Тогда
		Возврат
	КонецЕсли;	
	//
	ПараметрыОткрытия = Новый Структура ("Ключ", РегистраторЦены);
	ФормаРегистратора = ПолучитьФорму(ПолучитьИмяФормыРегистратораЦены (), ПараметрыОткрытия, ЭтаФорма, УникальныйИдентификатор);
	ФормаРегистратора.ТолькоПросмотр = Истина;
	ФормаРегистратора.Открыть()
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СформироватьСписокОбозначенийМД (Объект.МонетныйДвор);
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда // новый
		АвтоматическоеФормированиеНаименования 	= Истина;
	КонецЕсли;	
	
	УправлениеДоступностьюНаименования();
	
	АдресКартинки = ПолучитьНавигационнуюСсылку (Объект.Ссылка, "Картинка");

	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
    	ОбновитьЭлементыДополнительныхРеквизитов();
    	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры


&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура АвтоматическоеФормированиеНаименованияПриИзменении(Элемент)
	
	УправлениеДоступностьюНаименования()	
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностьюНаименования()

	Элементы.Наименование.РедактированиеТекста = НЕ АвтоматическоеФормированиеНаименования;

КонецПроцедуры

&НаКлиенте
Процедура НоминалПриИзменении(Элемент)
	СформироватьНаименование ();
КонецПроцедуры

Процедура СформироватьНаименование ()
	Если НЕ АвтоматическоеФормированиеНаименования Тогда
		Возврат
	КонецЕсли;
	
	Наименование 	= "";
	Описание		= "";
	ОписаниеМеталл  = "";
	
	Если ЗначениеЗаполнено(Объект.Номинал) Тогда
		Наименование = Наименование + Объект.Номинал.Наименование;
	КонецЕсли;	

	Если ЗначениеЗаполнено(Объект.ГодВыпуска) Тогда
		Наименование = Наименование + " " + Формат(Объект.ГодВыпуска, "ЧГ=0") + "г.";
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.Металл) Тогда
		ОписаниеМеталл = Объект.Металл;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.ОбозначениеМД) Тогда
		Описание = Объект.ОбозначениеМД;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.Минцмейстер) Тогда
		Описание = ?(ПустаяСтрока(Описание), Объект.Минцмейстер.Буквы, Описание + "-" + Объект.Минцмейстер.Буквы);
	КонецЕсли;	
	
	Описание = ?(ПустаяСтрока(ОписаниеМеталл), Описание, Строка(ОписаниеМеталл) + ?(ПустаяСтрока(Описание), "", "/" + Описание));
	
	Наименование = Наименование + " " +  Описание;
	
	Объект.Наименование = СокрЛП(Наименование);
	
КонецПроцедуры	

&НаКлиенте
Процедура МонетныйДворПриИзменении(Элемент)
	Объект.ОбозначениеМД = "";
	СформироватьНаименование ();
	СформироватьСписокОбозначенийМД (Объект.МонетныйДвор);
КонецПроцедуры

&НаСервере
Процедура СформироватьСписокОбозначенийМД (МонетныйДвор)
	
	Элементы.ОбозначениеМД.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МонетныеДворыОбозначения.Обозначение
		|ИЗ
		|	Справочник.МонетныеДворы.Обозначения КАК МонетныеДворыОбозначения
		|ГДЕ
		|	МонетныеДворыОбозначения.Ссылка = &МД";
	
	Запрос.УстановитьПараметр("МД", МонетныйДвор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Элементы.ОбозначениеМД.СписокВыбора.Добавить(Выборка.Обозначение);
	КонецЦикла;
	
КонецПроцедуры 	

&НаКлиенте
Процедура ГодВыпускаПриИзменении(Элемент)
	СформироватьНаименование ();
КонецПроцедуры

&НаКлиенте
Процедура МеталлПриИзменении(Элемент)
	СформироватьНаименование ();
КонецПроцедуры

&НаКлиенте
Процедура МинцмейстерПриИзменении(Элемент)
	СформироватьНаименование ();
КонецПроцедуры

&НаКлиенте
Процедура ОбозначениеМДПриИзменении(Элемент)
	СформироватьНаименование ();
КонецПроцедуры

&НаКлиенте
Процедура ЭпохаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Объект.ГодВыпуска) Тогда
		ПараметрыОтбора.Вставить("ГодВыпуска", Объект.ГодВыпуска);
	КонецЕсли;	
	ФормаВыбора = ПолучитьФорму("Справочник.Эпохи.ФормаВыбора", ПараметрыОтбора, Элементы.Эпоха);
	ФормаВыбора.Открыть ()

КонецПроцедуры

&НаКлиенте
Процедура МинцмейстерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Объект.ГодВыпуска) Тогда
		ПараметрыОтбора.Вставить("ГодВыпуска", Объект.ГодВыпуска);
	КонецЕсли;	
	ФормаВыбора = ПолучитьФорму("Справочник.Минцмейстеры.ФормаВыбора", ПараметрыОтбора, Элементы.Минцмейстер);
	ФормаВыбора.Открыть ()

КонецПроцедуры

&НаКлиенте
Процедура МонетныйДворНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Объект.ГодВыпуска) Тогда
		ПараметрыОтбора.Вставить("ГодВыпуска", Объект.ГодВыпуска);
	КонецЕсли;	
	ФормаВыбора = ПолучитьФорму("Справочник.МонетныеДворы.ФормаВыбора", ПараметрыОтбора, Элементы.МонетныйДвор);
	ФормаВыбора.Открыть ()
	
КонецПроцедуры


&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Объект.Наименование = СокрЛП (Объект.Наименование);
КонецПроцедуры

&НаКлиенте
Процедура КаталожныеНомераПриИзменении(Элемент)
	Элемент.ТекущиеДанные.КаталожныйНомер = СокрЛП (Элемент.ТекущиеДанные.КаталожныйНомер);
КонецПроцедуры

&НаКлиенте
Процедура КартинкаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузкаФайлаПослеУстановкиРасширения", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения, , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаФайлаПослеУстановкиРасширения(РасширениеРаботыСФайламиПодключено, ДополнительныеПараметры) Экспорт
	
	Если РасширениеРаботыСФайламиПодключено Тогда
		
		ДиалогОткрытияФайла 						= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.ПредварительныйПросмотр	= Ложь;
		ДиалогОткрытияФайла.Фильтр 					= "Все картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
													+ "Формат bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
													+ "Формат JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
													+ "Формат TIFF (*.tif)|*.tif|"
													+ "Формат GIF (*.gif)|*.gif|"
													+ "Формат PNG (*.png)|*.png|"
													+ "Формат icon (*.ico)|*.ico|"
													+ "Формат метафайл (*.wmf;*.emf)|*.wmf;*.emf|"; 
		ДиалогОткрытияФайла.МножественныйВыбор 		= Ложь;
		ДиалогОткрытияФайла.Заголовок 				= НСтр("ru = 'Выбор файла картинки'");
		
		Обработчик = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект, ДополнительныеПараметры);
		
		НачатьПомещениеФайлов(Обработчик, , ДиалогОткрытияФайла, Истина, УникальныйИдентификатор);
		
	Иначе // Если веб-клиент без подключенного расширения.
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайлаБезРасширения", ЭтотОбъект);
		НачатьПомещениеФайла(ОписаниеОповещения, , ,Истина, УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт

    Если ПомещенныеФайлы = Неопределено Тогда
        Возврат;
    КонецЕсли;

	Для Каждого ПереданныйФайл Из ПомещенныеФайлы Цикл
		СохранитьКартинку (ПолучитьИзВременногоХранилища(ПереданныйФайл.Хранение));
    КонецЦикла;
	
	АдресКартинки = ПолучитьНавигационнуюСсылку (Объект.Ссылка, "Картинка");
	//
	Элементы.Картинка.Обновить();
	
КонецПроцедуры // ()

&НаКлиенте
Процедура ОбработатьВыборФайлаБезРасширения(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьКартинку (ПолучитьИзВременногоХранилища(Адрес));
	
	АдресКартинки = ПолучитьНавигационнуюСсылку (Объект.Ссылка, "Картинка");
	//
	Элементы.Картинка.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьКартинку(ДвоичныеДанные)
	
	ТекушийОбъект 				= РеквизитФормыВЗначение("Объект");
	ТекушийОбъект.Картинка 		= Новый ХранилищеЗначения (ДвоичныеДанные);
	ТекушийОбъект.Записать ();
	ЗначениеВРеквизитФормы(ТекушийОбъект, "Объект");

КонецПроцедуры

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОткрытьНаборСвойств(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьНаборСвойствПродолжение",
		ЭтотОбъект);

	Если Объект.Ссылка.Пустая() Тогда
		
		ТекстВопроса = НСтр("ru = 'Для перехода к набору свойств элемент необходимо записать.'") + Символы.ПС + НСтр("ru = 'Записать?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе 
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.ОК);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНаборСвойствПродолжение(Результат, Параметры) Экспорт 

	Если Результат = КодВозвратаДиалога.Нет Тогда 
		Возврат;	
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда 
					
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", "НаборыДополнительныхРеквизитов");
	
	ОткрытьФорму("Справочник.НаборыДополнительныхРеквизитовИСведений.ФормаСписка", ПараметрыФормы);
	
	ПараметрыПерехода = Новый Структура;
	ПараметрыПерехода.Вставить("Набор", 					ПредопределенноеЗначение("Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ВидыМонет"));
	ПараметрыПерехода.Вставить("Свойство", 					Неопределено);
	ПараметрыПерехода.Вставить("ЭтоДополнительноеСведение", Ложь);
	
	Оповестить("Переход_НаборыДополнительныхРеквизитовИСведений", ПараметрыПерехода);

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти


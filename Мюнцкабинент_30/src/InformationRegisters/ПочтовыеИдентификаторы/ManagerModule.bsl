Функция ПолучитьПочтовыйИдентификатор (ДокСсылка) Экспорт
	
	ПочтовыйИдентификатор = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПочтовыеИдентификаторы.ПочтовыйИдентификатор
		|ИЗ
		|	РегистрСведений.ПочтовыеИдентификаторы КАК ПочтовыеИдентификаторы
		|ГДЕ
		|	ПочтовыеИдентификаторы.Документ = &ДокСсылка";
	
	Запрос.УстановитьПараметр("ДокСсылка", ДокСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ПочтовыйИдентификатор = ВыборкаДетальныеЗаписи.ПочтовыйИдентификатор
	КонецЕсли;
	
	Возврат ПочтовыйИдентификатор
	
КонецФункции	

Функция ПолучитьИнформациюОПочтовомОтправлении (ДокСсылка) Экспорт
	
	ИнформацияОПочтовомОтправлении = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПочтовыеИдентификаторы.ПочтовыйИдентификатор,
		|	ПочтовыеИдентификаторы.ВрученАдресату,
		|	ПочтовыеИдентификаторы.СтранаПолучателя,
		|	ПочтовыеИдентификаторы.ИндексПолучателя,
		|	ПочтовыеИдентификаторы.АдресПолучателя,
		|	ПочтовыеИдентификаторы.Вес,
		|	ПочтовыеИдентификаторы.Категория,
		|	ПочтовыеИдентификаторы.Наименование
		|ИЗ
		|	РегистрСведений.ПочтовыеИдентификаторы КАК ПочтовыеИдентификаторы
		|ГДЕ
		|	ПочтовыеИдентификаторы.Документ = &ДокСсылка";
	
	Запрос.УстановитьПараметр("ДокСсылка", ДокСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ИнформацияОПочтовомОтправлении = Новый Структура;
		//
		ИнформацияОПочтовомОтправлении.Вставить("ПочтовыйИдентификатор", 	ВыборкаДетальныеЗаписи.ПочтовыйИдентификатор);
		ИнформацияОПочтовомОтправлении.Вставить("ВрученАдресату", 			ВыборкаДетальныеЗаписи.ВрученАдресату);
		ИнформацияОПочтовомОтправлении.Вставить("СтранаПолучателя", 		ВыборкаДетальныеЗаписи.СтранаПолучателя);
		ИнформацияОПочтовомОтправлении.Вставить("ИндексПолучателя", 		ВыборкаДетальныеЗаписи.ИндексПолучателя);
		ИнформацияОПочтовомОтправлении.Вставить("АдресПолучателя", 			ВыборкаДетальныеЗаписи.АдресПолучателя);
		ИнформацияОПочтовомОтправлении.Вставить("Вес", 						ВыборкаДетальныеЗаписи.Вес);
		ИнформацияОПочтовомОтправлении.Вставить("Категория", 				ВыборкаДетальныеЗаписи.Категория);
		ИнформацияОПочтовомОтправлении.Вставить("Наименование", 			ВыборкаДетальныеЗаписи.Наименование);
	КонецЕсли;
	
	Возврат ИнформацияОПочтовомОтправлении
	
КонецФункции	

Функция ПолучитьДокументПоИдентификатору (ПочтовыйИдентификатор) Экспорт
	
	ДокументСсылка = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПочтовыеИдентификаторы.Документ
		|ИЗ
		|	РегистрСведений.ПочтовыеИдентификаторы КАК ПочтовыеИдентификаторы
		|ГДЕ
		|	ПочтовыеИдентификаторы.ПочтовыйИдентификатор = &ПочтовыйИдентификатор";
	
	Запрос.УстановитьПараметр("ПочтовыйИдентификатор", СокрЛП(ПочтовыйИдентификатор));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ДокументСсылка = ВыборкаДетальныеЗаписи.Документ;
	КонецЕсли;
	
	 Возврат ДокументСсылка
	
 КонецФункции	
 
Процедура ЗаписатьПараметрыПочтовогоОтправления (Параметры) Экспорт
	Если НЕ Параметры.Свойство ("ПочтовыйИдентификатор") Тогда
		Возврат
	КонецЕсли;	
	//
	ДокСсылка = ПолучитьДокументПоИдентификатору (Параметры.ПочтовыйИдентификатор);
	
	НЗ = РегистрыСведений.ПочтовыеИдентификаторы.СоздатьНаборЗаписей();
	НЗ.Отбор.Документ.Установить (ДокСсылка);
	НЗ.Прочитать ();
	
	Если Параметры.Свойство ("СтранаПолучателя") И ЗначениеЗаполнено(Параметры.СтранаПолучателя) Тогда
		НЗ [0].СтранаПолучателя = Параметры.СтранаПолучателя	
	КонецЕсли;	
	
	Если Параметры.Свойство ("ИндексПолучателя") И ЗначениеЗаполнено(Параметры.ИндексПолучателя) Тогда
		НЗ [0].ИндексПолучателя = Параметры.ИндексПолучателя	
	КонецЕсли;	
	
	Если Параметры.Свойство ("АдресПолучателя") И ЗначениеЗаполнено(Параметры.АдресПолучателя) Тогда
		НЗ [0].АдресПолучателя = Параметры.АдресПолучателя	
	КонецЕсли;	
	
	Если Параметры.Свойство ("Вес") И ЗначениеЗаполнено(Параметры.Вес) Тогда
		НЗ [0].Вес = Число(Параметры.Вес)	
	КонецЕсли;	
	
	Если Параметры.Свойство ("Категория") И ЗначениеЗаполнено(Параметры.Категория) Тогда
		НЗ [0].Категория = Параметры.Категория	
	КонецЕсли;	
	
	Если Параметры.Свойство ("Наименование") И ЗначениеЗаполнено(Параметры.Наименование) Тогда
		НЗ [0].Наименование = Параметры.Наименование
	ИначеЕсли Параметры.Свойство ("Категория") И ЗначениеЗаполнено(Параметры.Категория) Тогда
		НЗ [0].Наименование = Параметры.Категория
	КонецЕсли;	
	
	Если Параметры.Свойство ("Отправитель") И ЗначениеЗаполнено(Параметры.Отправитель) Тогда
		НЗ [0].Отправитель = Параметры.Отправитель	
	КонецЕсли;	
	
	Если Параметры.Свойство ("Получатель") И ЗначениеЗаполнено(Параметры.Получатель) Тогда
		НЗ [0].Получатель = Параметры.Получатель	
	КонецЕсли;	
	
	НЗ.Записать();
	
	
КонецПроцедуры	 

Процедура УстановитьОтметкуОВручении (ДокСсылка) Экспорт
	
	НЗ = РегистрыСведений.ПочтовыеИдентификаторы.СоздатьНаборЗаписей();
	НЗ.Отбор.Документ.Установить (ДокСсылка);
	НЗ.Прочитать ();
	
	НЗ [0].ВрученАдресату = Истина;
	
	НЗ.Записать();
	
КонецПроцедуры	

Процедура УстановитьТекущийСтатус (ДокСсылка, Статус) Экспорт
	
	Если Статус = Неопределено ИЛИ Статус = Справочники.ПочтовыеСтатусы.ПустаяСсылка() Тогда
		Возврат
	КонецЕсли;	
	
	НЗ = РегистрыСведений.ПочтовыеИдентификаторы.СоздатьНаборЗаписей();
	НЗ.Отбор.Документ.Установить (ДокСсылка);
	НЗ.Прочитать ();
	
	НЗ [0].ПредыдущийСтатус = НЗ [0].ТекущийСтатус;
	НЗ [0].ТекущийСтатус 	= Статус;
	
		
	НЗ.Записать();	
		
		
	//РаботаСПочтовымиОтправлениями.ОповеститьОбИзмененииСтатуса(ДокСсылка, Статус, НЗ [0].ПочтовыйИдентификатор); 
	
	
	
КонецПроцедуры	
	 